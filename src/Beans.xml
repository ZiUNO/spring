<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--default-init-method="init"
       default-destroy-method="destroy"-->
    <!--在beans标签中添加默认初始化和销毁回调函数-->

    <bean id="hello" class="com.ziuno.Hello">
        <property name="message" value="aop set hello message"/>
    </bean>
    <bean id="logging" class="com.ziuno.Aspects.Logging"/>
    <bean id="timer" class="com.ziuno.Aspects.Timer"/>
    <aop:config>
        <aop:aspect id="log" ref="logging">
            <aop:pointcut id="logProcess" expression="execution(* com.ziuno.Hello.set*(..))"/>
            <aop:before method="beforeAdvice" pointcut-ref="logProcess"/>
            <aop:after method="afterAdvice" pointcut-ref="logProcess"/>
        </aop:aspect>
        <aop:aspect id="time" ref="timer">
            <aop:pointcut id="time" expression="execution(* com.ziuno.Hello.get*())"/>
            <aop:before pointcut-ref="time" method="getTime"/>
            <aop:after pointcut-ref="time" method="getTime"/>
        </aop:aspect>
    </aop:config>

    <!--<bean id="myPublisher" class="com.ziuno.Publishers.MyPublisher"/>-->
    <!--<bean id="myListener" class="com.ziuno.Listeners.MyListener"/>-->

    <!--<bean id="hello" class="com.ziuno.Hello" scope="prototype"/>-->
    <!--<bean class="com.ziuno.Listeners.StartListener"/>-->
    <!--<bean class="com.ziuno.Listeners.StopListener"/>-->

    <!--<context:annotation-config/>-->
    <!--<bean id="casual_name" class="com.ziuno.Hello">-->
    <!--<property name="message" value="just casual message"/>-->
    <!--</bean>-->
    <!--<bean id="aloha" class="com.ziuno.Aloha">-->
    <!--</bean>-->
    <!--<bean id="more_casual_name" class="com.ziuno.Hello">-->
    <!--<property name="message" value="just more casual message"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash;@Required 的set函数必须在xml中配置&ndash;&gt;-->
    <!--&lt;!&ndash;@Autowire 自动装配 setter、构造函数等函数 自动装配属性可省略setter函数 自动装配setter可省略bean中配置&ndash;&gt;-->
    <!--&lt;!&ndash;@Autowire + @Qualifier("more_casual_name") 选择自动装配对象&ndash;&gt;-->
    <!--&lt;!&ndash;JSR-250&ndash;&gt;-->
    <!--&lt;!&ndash;@PostConstruct 注释作为初始化回调函数的一个替代&ndash;&gt;-->
    <!--&lt;!&ndash;@PreDestroy 注释作为销毁回调函数的一个替代&ndash;&gt;-->
    <!--&lt;!&ndash;@Resource 注释在字段中或者 setter 方法中使用，遵循byName进行注入&ndash;&gt;-->


    <!--<bean id="aloha" class="com.ziuno.Aloha" autowire="constructor">-->
    <!--<constructor-arg name="m" value="just constructor message"/>-->
    <!--<constructor-arg name="om" value="just constructor own message"/>-->
    <!--</bean>-->

    <!--<bean id="casualName" class="com.ziuno.Hello">-->
    <!--<property name="message" value="just hello constructor message"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash;构造函数自动装配，构造函数参数类型匹配即可自动装配，与byType类似&ndash;&gt;-->

    <!--<bean id="aloha" class="com.ziuno.Aloha" autowire="byType">-->
    <!--<property name="ownMessage" value="Aloha own message"/>-->
    <!--<property name="message" value="Aloha message"/>-->
    <!--</bean>-->
    <!--<bean id="casual" class="com.ziuno.Hello">-->
    <!--<property name="message" value="Hello casual message"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash;按照变量类型和其他bean类型自动装配&ndash;&gt;-->

    <!--<bean id="aloha" class="com.ziuno.Aloha" autowire="byName">-->
    <!--<property name="ownMessage" value="Aloha own message"/>-->
    <!--<property name="message" value="Aloha message"/>-->
    <!--</bean>-->
    <!--<bean id="hello" class="com.ziuno.Hello">-->
    <!--<property name="message" value="Hello message"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash;按照变量和id名进行自动装配&ndash;&gt;-->


    <!--<bean id="hello" class="com.ziuno.Hello">-->
    <!--<property name="list">-->
    <!--<list>-->
    <!--<value>v1</value>-->
    <!--<value>v2</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--<property name="map">-->
    <!--<map>-->
    <!--<entry key="m1" value="mapv1"/>-->
    <!--</map>-->
    <!--</property>-->
    <!--<property name="properties">-->
    <!--<props>-->
    <!--<prop key="prop1">propv1</prop>-->
    <!--</props>-->
    <!--</property>-->
    <!--<property name="set">-->
    <!--<set>-->
    <!--<value>setv1</value>-->
    <!--</set>-->
    <!--</property>-->
    <!--&lt;!&ndash;<property name="message"><null/></property>&ndash;&gt;-->
    <!--<property name="message" value=""/>-->
    <!--&lt;!&ndash;传入空值&ndash;&gt;-->
    <!--</bean>-->
    <!--&lt;!&ndash;注入 list map props set&ndash;&gt;-->
    <!--&lt;!&ndash;ref value值可混用&ndash;&gt;-->


    <!--<bean id="aloha" class="com.ziuno.Aloha">-->
    <!--<property name="hello">-->
    <!--<bean id="hello" class="com.ziuno.Hello" p:message="Hello inner Message"/>-->
    <!--</property>-->
    <!--<property name="ownMessage" value="aloha message"/>-->
    <!--<property name="message" value="Aloha message (inner)"/>-->
    <!--</bean>-->

    <!--<bean id="hello" class="com.ziuno.Hello" p:message="p-namespace message"/>-->
    <!--<bean id="aloha" class="com.ziuno.Aloha" parent="hello" p:hello-ref="hello" p:message="p-namespace aloha message" p:ownMessage="p-namespace aloha own message"/>-->
    <!--&lt;!&ndash;属性传引用或值类中对应属性值需有set&ndash;&gt;-->

    <!--<bean id="hello" class="com.ziuno.Hello" init-method="init" destroy-method="destroy" p:message="p-namespace message"/>-->
    <!--&lt;!&ndash;创建对象->执行构造函数->属性赋值->初始化前函数->执行类init-method->初始化后函数->Main中继续执行&ndash;&gt;-->
    <!--<bean class="com.ziuno.Processors.ProcessHello"/>-->

    <!--&lt;!&ndash;<constructor-arg name="h" ref="hello"/>&ndash;&gt;-->
    <!--&lt;!&ndash;<constructor-arg name="m" value="aaa"/>&ndash;&gt;-->
    <!--&lt;!&ndash;&lt;!&ndash;name&ndash;&gt;&ndash;&gt;-->
    <!--</bean>-->
    <!--&lt;!&ndash;bean 初始化参数&ndash;&gt;-->

    <!--&lt;!&ndash;<constructor-arg index="0" ref="hello"/>&ndash;&gt;-->
    <!--&lt;!&ndash;<constructor-arg index="1" value="aaa"/>&ndash;&gt;-->
    <!--&lt;!&ndash;&lt;!&ndash;index (best)&ndash;&gt;&ndash;&gt;-->

    <!--&lt;!&ndash;无构造函数时可使用property设置私有成员值&ndash;&gt;-->
    <!--&lt;!&ndash;<property name="name" value="值"/>成员传引用&ndash;&gt;-->
    <!--&lt;!&ndash;<property name="name" ref="引用"/>成员传值&ndash;&gt;-->

    <!---->
    <!--<constructor-arg ref="hello"/>-->
    <!--<constructor-arg type="java.lang.String" value="aaa"/>-->

    <!--<bean id="hello" class="com.ziuno.Hello" />-->
    <!--<bean id="aloha" class="com.ziuno.Aloha">-->

    <!--<bean id="hello" class="com.ziuno.Hello" abstract="true">-->
    <!--<property name="message" value="Hello,World"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash;模板bean，抽象true，无法实例化&ndash;&gt;-->

    <!--<bean id="hello" class="com.ziuno.Hello">-->
    <!--<property name="message" value="Hello,world!"/>-->
    <!--</bean>-->
    <!--<bean id="aloha" class="com.ziuno.Aloha" parent="hello">-->
    <!--<property name="message" value="Aloha,world!"/>-->
    <!--<property name="ownMessage" value="balabala"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash;bean继承：用于定义bean模板，其他bean继承&ndash;&gt;-->

    <!--<bean id="hello" class="com.ziuno.Hello" init-method="init" destroy-method="destroy"/>-->
    <!--&lt;!&ndash;<bean class="com.ziuno.Processors.ProcessHello"/>&ndash;&gt;-->

    <!--<bean id="hello" class="com.ziuno.Hello" scope="prototype" init-method="init"/>-->
    <!--&lt;!&ndash;note：类中有init函数，void无参数方法&ndash;&gt;-->

    <!--<bean id="hello" class="com.ziuno.Hello" scope="prototype"/>-->
    <!--&lt;!&ndash;note：多个实例对象&ndash;&gt;-->

    <!--<bean id="hello" class="com.ziuno.Hello" scope="singleton">-->
    <!--&lt;!&ndash;note：singleton 只存放一个共享bean实例&ndash;&gt;-->
    <!--</bean>-->

</beans>